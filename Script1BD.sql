/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.1 		*/
/*  Created On : 25-may.-2023 8:12:35 p. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS BiceCity CASCADE
;

DROP TABLE IF EXISTS Cuenta CASCADE
;

DROP TABLE IF EXISTS EstacionBicicleta CASCADE
;

DROP TABLE IF EXISTS EstacionBicicleta_Viaje CASCADE
;

DROP TABLE IF EXISTS FormaPago CASCADE
;

DROP TABLE IF EXISTS Localidad CASCADE
;

DROP TABLE IF EXISTS Plan CASCADE
;

DROP TABLE IF EXISTS Plan_Cuenta CASCADE
;

DROP TABLE IF EXISTS Usuario CASCADE
;

DROP TABLE IF EXISTS Viaje CASCADE
;

/* Create Tables */

CREATE TABLE BiceCity
(
	k_idCiudad numeric(5) NOT NULL,	-- Es un numero de 5 digitos con el que se identifica la correspondiente ciudad los dos primeros numeros corresponden al departamento y los otros 3 numeros son la identidicacion restante del municipio/ciudad
	n_ciudad varchar(20) NOT NULL,	-- en este campo encontramos el nombre de la ciudad podemos ver que tiene un espacio de 20 caracteres ya que en colombia no hay ciudades con mas caracteres que estos
	o_horaInicialServ time without time zone NOT NULL,	-- hora en la que se pone a servicio hacia la comunidad bicecity cada dia
	o_horaFinalServ time without time zone NOT NULL	-- hora en la que se cierra el servicio hacia la comunidad de bicecity cada dia
)
;

CREATE TABLE Cuenta
(
	k_codigo numeric(20) NOT NULL,
	k_idUsuario varchar(10) NULL,
	v_saldo integer NULL,
	o_estado varchar(4) NULL
)
;

CREATE TABLE EstacionBicicleta
(
	k_idEstacion numeric(3) NOT NULL,	-- el id estacion es un numero de 3 digitos para poder identificar las estaciones
	k_idBicicleta numeric(4) NOT NULL,	-- el identificador de cada bicicleta como son 3300 en un comienzo se deja un id de 4 digitos
	k_idLocalidad numeric(2) NOT NULL,	-- el id con el que se conoce la localidad es una llave foranea
	n_estacion varchar(25) NOT NULL,	-- el nombre con el que se identifica una estacion
	v_capacidadDisponible numeric(2) NOT NULL,	-- es la capacidad disponible de cada estacion la cual no puede superar la capacidad y no puede ser negativo
	o_direccion varchar(25) NOT NULL,	-- la direccion de la estacion
	v_capacidad numeric(2) NOT NULL,	-- es la capacidad de bicicletas de cada estacion no puede se negativo
	n_tipoBicicleta varchar(20) NOT NULL	-- puede ser mecanica o electrica en un comienzo
)
;

CREATE TABLE EstacionBicicleta_Viaje
(
	o_tipoEvento varchar(1) NOT NULL,	-- El tipo de evento que se registra si es un bloqueo o desbloqueo
	k_idEstacion numeric(3) NOT NULL,	-- El id con el que se reconoce una estacion es una llave foranea
	k_idBicicleta numeric(4) NOT NULL,	-- el id con el que se conoce una bicicleta  es una llave foranea
	k_idViaje numeric(10) NOT NULL,	-- el id con el que se reocnoce un trayecto de un punto a otro es una llave foranea
	k_codigo numeric(20) NOT NULL	-- codigo del cliente con el que se encuentra asociado el viaje
)
;

CREATE TABLE FormaPago
(
	k_noTarjeta numeric(20) NOT NULL,
	f_vencimiento date NOT NULL,
	n_tarjeta varchar(25) NOT NULL,
	k_idUsuario varchar(10) NULL
)
;

CREATE TABLE Localidad
(
	k_idLocalidad numeric(2) NOT NULL,	-- el id de la localidad consta de 2 numeros con los que reconoceremos la localidad correspondiente de la ciudad
	k_idCiudad numeric(5) NOT NULL,	-- el id de la ciudad corresponde a un numero de 5 digitos
	n_localidad varchar(30) NOT NULL	-- el nombre de la localidad es el nombre con el que se identifica el nombre mas largo de la localidad de bogota es de 14 caracteresAntonio Nariño
)
;

CREATE TABLE Plan
(
	k_idPlan numeric(1) NOT NULL,
	v_minAdicional integer NOT NULL,
	v_sacarBicicleta integer NOT NULL,
	v_cantViajes integer,
	v_viajead integer,
	v_base integer,
	o_tiempoMax integer
)
;

CREATE TABLE Plan_Cuenta
(
	k_idPlan numeric(1) NOT NULL,
	k_codigo numeric(20) NOT NULL
)
;

CREATE TABLE Usuario
(
	k_idUsuario varchar(10) NOT NULL,
	i_tipoId varchar(2) NOT NULL,
	n_correo varchar(30) NOT NULL,
	n_nombre1 varchar(25) NOT NULL,
	n_nombre2 varchar(25) NULL,
	n_apellido1 varchar(25) NOT NULL,
	n_apellido2 varchar(25) NULL,
	n_nacionalidad varchar(25) NOT NULL,
	f_nacimiento date NOT NULL,
	n_eps varchar(15) NOT NULL,
	i_sexo varchar(1) NOT NULL,
	v_celular numeric(10) NOT NULL
)
;

CREATE TABLE Viaje
(
	k_idViaje numeric(10) NOT NULL,	-- el id de cada viaje se conforma de un numero de 10 digitos
	k_codigo numeric(20) NOT NULL,
	o_horaFinal time NULL,
	o_horaInicial time NULL,
	o_minAdicional integer NULL,	-- minutls
	v_costo integer NULL,
	o_duracion integer NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE BiceCity ADD CONSTRAINT PK_BiceCity
	PRIMARY KEY (k_idciudad);

ALTER TABLE BiceCity ADD CONSTRAINT CK_idCiudad CHECK ((k_idCiudad >= 0))
;

ALTER TABLE Cuenta ADD CONSTRAINT PK_Cuenta
	PRIMARY KEY (k_codigo)
;

ALTER TABLE Cuenta ADD CONSTRAINT CK_codigo CHECK ((k_codigo>=0))
;

ALTER TABLE EstacionBicicleta ADD CONSTRAINT PK_EstacionBicicleta
	PRIMARY KEY (k_idEstacion,k_idBicicleta)
;

ALTER TABLE EstacionBicicleta ADD CONSTRAINT CK_vCapacidadDisponible CHECK ((v_capacidadDisponible >= 0))
;

ALTER TABLE EstacionBicicleta ADD CONSTRAINT CK_vCapacidad CHECK ((v_capacidad >= 0))
;

ALTER TABLE EstacionBicicleta_Viaje ADD CONSTRAINT PK_EstacionBicicleta_Viaje
	PRIMARY KEY (k_idEstacion,k_idBicicleta,k_idViaje,k_codigo)
;

ALTER TABLE FormaPago ADD CONSTRAINT PK_FormaPago
	PRIMARY KEY (k_noTarjeta)
;

ALTER TABLE Localidad ADD CONSTRAINT PK_Localidad
	PRIMARY KEY (k_idLocalidad)
;

ALTER TABLE Localidad ADD CONSTRAINT CK_nLocalidad CHECK (n_localidad IN ('Usaquén', 'Chapinero', 'Santa Fe', 'San Cristóbal', 'Usme', 'Tunjuelito', 'Bosa', 'Kennedy', 'Fontibón', 'Engativá'))
;

ALTER TABLE Localidad ADD CONSTRAINT CK_idCiudad CHECK ((k_idCiudad >= 0))
;

ALTER TABLE Localidad ADD CONSTRAINT CK_idLocalidad CHECK ((k_idLocalidad >= 0))
;

ALTER TABLE Plan ADD CONSTRAINT PK_Plan
	PRIMARY KEY (k_idPlan)
;

ALTER TABLE Plan_Cuenta ADD CONSTRAINT PK_Plan_Cuenta
	PRIMARY KEY (k_codigo,k_idPlan)
;

ALTER TABLE Usuario ADD CONSTRAINT PK_Usuario
	PRIMARY KEY (k_idUsuario)
;

ALTER TABLE Usuario ADD CONSTRAINT CK_TipoId CHECK (i_tipoId in ('TI', 'CC'))
;

ALTER TABLE Usuario ADD CONSTRAINT CK_Sexo CHECK (i_sexo in ('m', 'f', 'o'))
;

ALTER TABLE Usuario ADD CONSTRAINT CK_Correo CHECK ( (n_correo IS NULL OR n_correo ~* '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'))
;

ALTER TABLE Usuario ADD CONSTRAINT CK_Nacionalidad CHECK (n_nacionalidad in ('Colombiana', ('Extranjera')))
;

ALTER TABLE Viaje ADD CONSTRAINT PK_Viaje
	PRIMARY KEY (k_idViaje,k_codigo)
;

ALTER TABLE Viaje ADD CONSTRAINT CK_vCosto CHECK ((v_costo >= 0))
;

/* Create Foreign Key Constraints */

ALTER TABLE Cuenta ADD CONSTRAINT FK_Cuenta_Usuario
	FOREIGN KEY (k_idUsuario) REFERENCES Usuario (k_idUsuario) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE EstacionBicicleta ADD CONSTRAINT FK_EstacionBicicleta_Localidad
	FOREIGN KEY (k_idLocalidad) REFERENCES Localidad (k_idLocalidad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE EstacionBicicleta_Viaje ADD CONSTRAINT FK_EstacionBicicleta_Viaje_EstacionBicicleta
	FOREIGN KEY (k_idEstacion,k_idBicicleta) REFERENCES EstacionBicicleta (k_idEstacion,k_idBicicleta) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE EstacionBicicleta_Viaje ADD CONSTRAINT FK_EstacionBicicleta_Viaje_Viaje
	FOREIGN KEY (k_idViaje,k_codigo) REFERENCES Viaje (k_idViaje,k_codigo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE FormaPago ADD CONSTRAINT FK_FormaPago_Usuario
	FOREIGN KEY (k_idUsuario) REFERENCES Usuario (k_idUsuario) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Localidad ADD CONSTRAINT FK_Localidad_BiceCity
	FOREIGN KEY (k_idCiudad) REFERENCES BiceCity (k_idCiudad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Plan_Cuenta ADD CONSTRAINT FK_Plan_Cuenta_Cuenta
	FOREIGN KEY (k_codigo) REFERENCES Cuenta (k_codigo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Plan_Cuenta ADD CONSTRAINT FK_Plan_Cuenta_Plan
	FOREIGN KEY (k_idPlan) REFERENCES Plan (k_idPlan) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Viaje ADD CONSTRAINT FK_Viaje_Cuenta
	FOREIGN KEY (k_codigo) REFERENCES Cuenta (k_codigo) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

COMMENT ON TABLE BiceCity
	IS 'Tabla de la ciudad '
;

COMMENT ON COLUMN BiceCity.k_idCiudad
	IS 'Es un numero de 5 digitos con el que se identifica la correspondiente ciudad los dos primeros numeros corresponden al departamento y los otros 3 numeros son la identidicacion restante del municipio/ciudad'
;

COMMENT ON COLUMN BiceCity.n_ciudad
	IS 'en este campo encontramos el nombre de la ciudad podemos ver que tiene un espacio de 20 caracteres ya que en colombia no hay ciudades con mas caracteres que estos'
;

COMMENT ON COLUMN BiceCity.o_horaInicialServ
	IS 'hora en la que se pone a servicio hacia la comunidad bicecity cada dia'
;

COMMENT ON COLUMN BiceCity.o_horaFinalServ
	IS 'hora en la que se cierra el servicio hacia la comunidad de bicecity cada dia'
;

COMMENT ON COLUMN EstacionBicicleta.k_idEstacion
	IS 'el id estacion es un numero de 3 digitos para poder identificar las estaciones'
;

COMMENT ON COLUMN EstacionBicicleta.k_idBicicleta
	IS 'el identificador de cada bicicleta como son 3300 en un comienzo se deja un id de 4 digitos'
;

COMMENT ON COLUMN EstacionBicicleta.k_idLocalidad
	IS 'el id con el que se conoce la localidad es una llave foranea'
;

COMMENT ON COLUMN EstacionBicicleta.n_estacion
	IS 'el nombre con el que se identifica una estacion'
;

COMMENT ON COLUMN EstacionBicicleta.v_capacidadDisponible
	IS 'es la capacidad disponible de cada estacion la cual no puede superar la capacidad y no puede ser negativo'
;

COMMENT ON COLUMN EstacionBicicleta.o_direccion
	IS 'la direccion de la estacion'
;

COMMENT ON COLUMN EstacionBicicleta.v_capacidad
	IS 'es la capacidad de bicicletas de cada estacion no puede se negativo'
;

COMMENT ON COLUMN EstacionBicicleta.n_tipoBicicleta
	IS 'puede ser mecanica o electrica en un comienzo'
;

COMMENT ON COLUMN EstacionBicicleta_Viaje.o_tipoEvento
	IS 'El tipo de evento que se registra si es un bloqueo o desbloqueo'
;

COMMENT ON COLUMN EstacionBicicleta_Viaje.k_idEstacion
	IS 'El id con el que se reconoce una estacion es una llave foranea'
;

COMMENT ON COLUMN EstacionBicicleta_Viaje.k_idBicicleta
	IS 'el id con el que se conoce una bicicleta  es una llave foranea'
;

COMMENT ON COLUMN EstacionBicicleta_Viaje.k_idViaje
	IS 'el id con el que se reocnoce un trayecto de un punto a otro es una llave foranea'
;

COMMENT ON COLUMN EstacionBicicleta_Viaje.k_codigo
	IS 'codigo del cliente con el que se encuentra asociado el viaje'
;

COMMENT ON COLUMN Localidad.k_idLocalidad
	IS 'el id de la localidad consta de 2 numeros con los que reconoceremos la localidad correspondiente de la ciudad'
;

COMMENT ON COLUMN Localidad.k_idCiudad
	IS 'el id de la ciudad corresponde a un numero de 5 digitos'
;

COMMENT ON COLUMN Localidad.n_localidad
	IS 'el nombre de la localidad es el nombre con el que se identifica el nombre mas largo de la localidad de bogota es de 14 caracteresAntonio Nariño'
;

COMMENT ON COLUMN Viaje.k_idViaje
	IS 'el id de cada viaje se conforma de un numero de 10 digitos'
;

COMMENT ON COLUMN Viaje.o_minAdicional
	IS 'minutls'
;
